AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Deploys a service to fetch Hearthstone leaderboard data every 2 minutes.

Resources:
  LeaderboardFetchFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: HearthstoneLeaderboardFetch
      CodeUri: src/
      Handler: dbUpdater.handler
      Timeout: 60 # One minute should be enough for the API calls
      MemorySize: 256
      Runtime: python3.11
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:Query
                - dynamodb:Scan
              Resource: !GetAtt HearthstoneLeaderboardTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref HearthstoneLeaderboardTable
      Events:
        ScheduledFetch:
          Type: Schedule
          Properties:
            Schedule: rate(2 minutes)

  HearthstoneLeaderboardTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: HearthstoneLeaderboard
      BillingMode: PAY_PER_REQUEST # Starts with on-demand pricing
      AttributeDefinitions:
        - AttributeName: "player_key"
          AttributeType: "S"
        - AttributeName: "timestamp"
          AttributeType: "S"
        - AttributeName: "server_key"
          AttributeType: "S"
        - AttributeName: "rank"
          AttributeType: "N"
      KeySchema:
        - AttributeName: "player_key"
          KeyType: "HASH"
        - AttributeName: "timestamp"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: RankIndex
          KeySchema:
            - AttributeName: "server_key"
              KeyType: "HASH"
            - AttributeName: "rank"
              KeyType: "RANGE"
          Projection:
            ProjectionType: ALL
